head(m.lit)
compare.lit <- join(agg.goal.lit, m.lit, by=c("categoryID", "metaphor", "qud", "featureSetNum"))
head(compare.lit)
nrow(agg.goal.lit)
nrow(m.lit)
agg.goal$featureSetNum <- factor(agg.goal$featureSetNum)
agg.goal.lit <- subset(agg.goal, metaphor=="0")
m.lit <- subset(m.set.long.summary, metaphor=="0")
compare.lit <- join(agg.goal.lit, m.lit, by=c("categoryID", "metaphor", "qud", "featureSetNum"))
head(compare.lit)
m.lit$qud <- factor(m.lit$qud)
compare.lit <- join(agg.goal.lit, m.lit, by=c("categoryID", "metaphor", "qud", "featureSetNum"))
head(compare.lit)
name.qud <- max.name
name.noQud <- paste("noQud-a", as.list(strsplit(n, "a"))[[1]][2], sep="")
met.qud <- read.csv(paste("../../Model/LiteralAdjectives/CombinedOutputMetaphor/", name.qud, sep=""), header=FALSE)
met.noQud <- read.csv(paste("../../Model/LiteralAdjectives/CombinedOutputMetaphor/", name.noQud, sep=""), header=FALSE)
lit.qud <- read.csv(paste("../../Model/LiteralAdjectives/CombinedOutputLiteral/", name.qud, sep=""), header=FALSE)
lit.noQud <- read.csv(paste("../../Model/LiteralAdjectives/CombinedOutputLiteral/", name.noQud, sep=""), header=FALSE)
#### With goal distinction ####
colnames(met.qud) <- c("category", "f1", "f2", "f3", "goal", "modelProb", "categoryID")
colnames(met.noQud) <- c("category", "f1", "f2", "f3", "goal", "modelProb", "categoryID")
colnames(lit.qud) <- c("category", "f1", "f2", "f3", "goal", "modelProb", "categoryID")
colnames(lit.noQud) <- c("category", "f1", "f2", "f3", "goal", "modelProb", "categoryID")
met.qud$qud <- "1"
met.noQud$qud <- "0"
lit.qud$qud <- "1"
lit.noQud$qud <- "0"
met.qud$metaphor <- "1"
met.noQud$metaphor <- "1"
lit.qud$metaphor <- "0"
lit.noQud$metaphor <- "0"
model.lit.met <- rbind(met.qud, met.noQud, lit.qud, lit.noQud)
model.lit.met <- join(model.lit.met, mapping, by=c("f1", "f2", "f3"))
agg.goal <- aggregate(data=model.lit.met, modelProb ~
f1 + f2 + f3 + categoryID + qud + metaphor + featureSetNum, FUN=sum)
agg.goal$featureSetNum <- factor(agg.goal$featureSetNum)
agg.goal.lit <- subset(agg.goal, metaphor=="0")
m.lit <- subset(m.set.long.summary, metaphor=="0")
m.lit$qud <- factor(m.lit$qud)
compare.lit <- join(agg.goal.lit, m.lit, by=c("categoryID", "metaphor", "qud", "featureSetNum"))
head(compare.lit)
agg.goal.lit <- subset(agg.goal, metaphor=="0")
m.lit <- subset(m.set.long.summary, metaphor=="0")
m.lit$qud <- factor(m.lit$qud)
compare.lit <- join(agg.goal.lit, m.lit, by=c("categoryID", "metaphor", "qud", "featureSetNum",
"f1", "f2", "f3"))
head(compare.lit)
View(agg.goal.lit)
agg.goal.lit$categoryID <- factor(agg.goal.lit$categoryID)
m.lit$metaphor <- factor(m.lit$metaphor)
m.lit$categoryID <- facto(m.lit$categoryID)
m.lit$categoryID <- factor(m.lit$categoryID)
compare.lit <- join(agg.goal.lit, m.lit, by=c("categoryID", "metaphor", "qud", "featureSetNum",
"f1", "f2", "f3"))
head(compare.lit)
compare.lit <- join(agg.goal.lit, m.lit, by=c("metaphor", "qud", "featureSetNum",
"f1", "f2", "f3"))
head(compare.lit)
compare.lit <- join(agg.goal.lit, m.lit, by=c("qud", "featureSetNum",
"f1", "f2", "f3"))
head(compare.lit)
compare.lit <- join(agg.goal.lit, m.lit, by=c("featureSetNum",
"f1", "f2", "f3"))
compare.lit <- join(agg.goal.lit, m.lit, by=c("featureSetNum",
"f1", "f2", "f3"))
head(compare.lit)
compare.lit <- join(agg.goal.lit, m.lit, by=c("categoryID", "qud", "featureSetNum",
"f1", "f2", "f3"))
head(compare.lit)
compare.lit <- join(agg.goal.lit, m.lit, by=c("categoryID", "featureSetNum",
"f1", "f2", "f3"))
head(compare.lit)
agg.goal.lit$qud <- factor(agg.goal.lit$qud)
agg.goal.lit <- subset(agg.goal, metaphor=="0")
agg.goal.lit$qud <- factor(agg.goal.lit$qud)
agg.goal.lit$metaphor <- factor(agg.goal.lit$metaphor)
m.lit <- subset(m.set.long.summary, metaphor=="0")
m.lit$qud <- factor(m.lit$qud)
m.lit$metaphor <- factor(m.lit$metaphor)
m.lit$categoryID <- factor(m.lit$categoryID)
compare.lit <- join(agg.goal.lit, m.lit, by=c("categoryID", "qud", "featureSetNum",
"f1", "f2", "f3"))
head(compare.lit)
compare.lit <- join(agg.goal.lit, m.lit, by=c("categoryID", "qud", "metaphor", "featureSetNum",
"f1", "f2", "f3"))
head(compare.lit)
with(compare.lit, cor.test(modelProb, normalizedProb))
ggplot(compare.lit), aes(x=modelProb, y=normalizedProb, color=featureSetNum, shape=qud)) +
#geom_errorbar(aes(ymin=normalizedProb-se, ymax=normalizedProb+se), color="grey") +
#geom_text(aes(label=animal)) +
geom_point(size=2.5) +
theme_bw() +
scale_color_brewer(name="Feature sets", palette="RdGy") +
xlab("Model") +
ylab("Human")
ggplot(compare.lit, aes(x=modelProb, y=normalizedProb, color=featureSetNum, shape=qud)) +
#geom_errorbar(aes(ymin=normalizedProb-se, ymax=normalizedProb+se), color="grey") +
#geom_text(aes(label=animal)) +
geom_point(size=2.5) +
theme_bw() +
scale_color_brewer(name="Feature sets", palette="RdGy") +
xlab("Model") +
ylab("Human")
with(subset(compare.lit, f1=="1"), cor.test(modelProb, normalizedProb))
with(subset(compare.lit, f1=="0"), cor.test(modelProb, normalizedProb))
ggplot(compare.lit, aes(x=modelProb, y=normalizedProb, color=featureSetNum, shape=qud)) +
#geom_errorbar(aes(ymin=normalizedProb-se, ymax=normalizedProb+se), color="grey") +
geom_text(aes(label=animal)) +
#geom_point(size=2.5) +
theme_bw() +
scale_color_brewer(name="Feature sets", palette="RdGy") +
xlab("Model") +
ylab("Human")
ggplot(agg.goalAnalysis.condition, aes(x=qud, y=modelProb, fill=goal)) +
geom_bar(stat="identity", color="black", position=position_dodge()) +
geom_errorbar(aes(ymin=modelProb-se, ymax=modelProb+se),
position=position_dodge(0.9), width=0.2) +
facet_grid(.~metaphor) +
scale_fill_brewer(palette="Pastel1") +
theme_bw()
head(model.met)
sum(subset(model.et, V1=="target")$V6)
sum(subset(model.met, V1=="target")$V6)
ggplot(agg.goalAnalysis.condition, aes(x=qud, y=modelProb, fill=goal)) +
geom_bar(stat="identity", color="black", position=position_dodge()) +
geom_errorbar(aes(ymin=modelProb-se, ymax=modelProb+se),
position=position_dodge(0.9), width=0.2) +
facet_grid(.~metaphor) +
scale_fill_brewer(palette="Pastel1") +
theme_bw()
ggplot(agg.goalAnalysis.condition, aes(x=qud, y=modelProb, fill=goal)) +
geom_bar(stat="identity", color="black", position=position_dodge()) +
geom_errorbar(aes(ymin=modelProb-se, ymax=modelProb+se),
position=position_dodge(0.9), width=0.2) +
facet_grid(.~metaphor) +
scale_fill_brewer(palette="Set1") +
theme_bw()
ggplot(agg.goalAnalysis.condition, aes(x=qud, y=modelProb, fill=goal)) +
geom_bar(stat="identity", color="black", position=position_dodge()) +
geom_errorbar(aes(ymin=modelProb-se, ymax=modelProb+se),
position=position_dodge(0.9), width=0.2) +
facet_grid(.~metaphor) +
scale_fill_brewer(palette="Accent1") +
theme_bw()
ggplot(agg.goalAnalysis.condition, aes(x=qud, y=modelProb, fill=goal)) +
geom_bar(stat="identity", color="black", position=position_dodge()) +
geom_errorbar(aes(ymin=modelProb-se, ymax=modelProb+se),
position=position_dodge(0.9), width=0.2) +
facet_grid(.~metaphor) +
scale_fill_brewer(palette="Accent") +
theme_bw()
ggplot(agg.goalAnalysis.condition, aes(x=qud, y=modelProb, fill=goal)) +
geom_bar(stat="identity", color="black", position=position_dodge()) +
geom_errorbar(aes(ymin=modelProb-se, ymax=modelProb+se),
position=position_dodge(0.9), width=0.2) +
facet_grid(.~metaphor) +
scale_fill_brewer(palette="Set2") +
theme_bw()
m.set <- read.csv("data80-set-long.csv")
#########################
# Long form
########################
m.set.long <- melt(m.set, id=c("workerid", "gender", "age", "income", "categoryID", "order", "animal", "condition"))
m.set.long$featureSetNum <- unlist(lapply(strsplit(as.character(m.set.long$variable), "X"), "[", 2))
m.set.long$qud <- ifelse(m.set.long$condition==1 | m.set.long$condition==2, 0, 1)
m.set.long$metaphor <- ifelse(m.set.long$condition==1 | m.set.long$condition==3, 0, 1)
m.set.long$qud <- factor(m.set.long$qud)
m.set.long$metaphor <- factor(m.set.long$metaphor)
m.set.long$featureSetNum <- factor(m.set.long$featureSetNum)
m.set.normalizing <- aggregate(data=m.set.long, value ~ workerid + categoryID + animal + qud + metaphor + condition, FUN=sum)
colnames(m.set.normalizing)[7] <- "normalizing"
m.set.long <- join(m.set.long, m.set.normalizing, by=c("workerid", "categoryID", "animal", "qud", "metaphor", "condition"))
# filter out rows with 0 as normalizer
m.set.long <- subset(m.set.long, normalizing != 0)
m.set.long$normalizedProb <- m.set.long$value / m.set.long$normalizing
m.set.long.summary <- summarySE(m.set.long, measurevar="normalizedProb",
groupvars=c("categoryID", "animal", "metaphor", "qud", "featureSetNum", "condition"))
m.set.long.summary.condition <- summarySE(m.set.long.summary, measurevar="normalizedProb",
groupvars=c("metaphor", "qud", "featureSetNum"))
m.set.long.summary.condition$qud <- factor(m.set.long.summary.condition$qud,
labels=c("Vague", "Specifc"))
m.set.long.summary.condition$metaphor <- factor(m.set.long.summary.condition$metaphor,
labels=c("Literal", "Metaphorical"))
ggplot(m.set.long.summary.condition, aes(x=qud, y=normalizedProb, fill=featureSetNum)) +
geom_bar(stat="identity", color="black", position=position_dodge()) +
geom_errorbar(aes(ymin=normalizedProb-se, ymax=normalizedProb+se), position=position_dodge(0.9), width=0.2) +
theme_bw() +
scale_fill_brewer(name="Feature sets", palette="RdGy") +
facet_grid(.~ metaphor) +
xlab("QUD") +
ylab("Normalized probability")
mapping <- read.csv("../FeaturePriorExp/featureSetMapping.csv")
mapping$featureSetNum <- factor(mapping$featureSetNum)
#mapping$featureSetNum <- factor(mapping$featureSetNum,
#                                labels=c("1,1,1", "1,1,0", "1,0,1", "1,0,0",
#                                         "0,1,1", "0,1,0", "0,0,1", "0,0,0"))
m.set.long.summary <- join(m.set.long.summary, mapping, by=c("featureSetNum"))
m.set.marginal.f1 <- aggregate(data=subset(m.set.long.summary, f1=="1"),
normalizedProb ~ categoryID + metaphor + qud + condition, FUN=sum)
m.set.marginal.f1$featureNum="1"
m.set.marginal.f2 <- aggregate(data=subset(m.set.long.summary, f2=="1"),
normalizedProb ~ categoryID + metaphor + qud + condition, FUN=sum)
m.set.marginal.f2$featureNum="2"
m.set.marginal.f3 <- aggregate(data=subset(m.set.long.summary, f3=="1"),
normalizedProb ~ categoryID + metaphor + qud + condition, FUN=sum)
m.set.marginal.f3$featureNum="3"
m.set.marginal <- rbind(m.set.marginal.f1, m.set.marginal.f2, m.set.marginal.f3)
m.set.marginal.condition <- summarySE(m.set.marginal, measurevar="normalizedProb",
groupvars=c("metaphor", "qud", "featureNum"))
m.set.marginal.condition$qud <- factor(m.set.marginal.condition$qud, labels=c("Vague", "Specific"))
m.set.marginal.condition$metaphor <- factor(m.set.marginal.condition$metaphor,
labels=c("Literal", "Metaphorical"))
ggplot(m.set.marginal.condition, aes(x=qud, y=normalizedProb, fill=featureNum)) +
geom_bar(stat="identity", color="black", position=position_dodge()) +
geom_errorbar(aes(ymin=normalizedProb-se, ymax=normalizedProb+se), position=position_dodge(0.9), width=0.2) +
theme_bw() +
facet_grid(.~ metaphor) +
scale_fill_brewer(name="Features", palette="RdGy") +
facet_grid(.~ metaphor) +
xlab("QUD") +
ylab("Normalized probability") +
ylim(c(0, 1))
############################
# Fit model
############################
m.metaphor <- subset(m.set.long.summary, metaphor==1)
# Get all the names of the model files to fit
#filenames <- read.csv("../../Model/Alternatives/combinedOutputFilenames.txt", header=FALSE)
filenames <- read.csv("../../Model/CogSciModel/combinedOutputFilenames.txt", header=FALSE)
#filenames <- read.csv("../../Model/NoAlternatives/combinedOutputFilenames.txt", header=FALSE)
#filenames <- read.csv("../../Model/LiteralAdjectives/combinedOutputFilenames.txt", header=FALSE)
max.cor <- 0
max.name <- ""
for (n in filenames$V1) {
if (grepl("g", n)) {
name.qud <- n
name.noQud <- paste("noQud-a", as.list(strsplit(n, "a"))[[1]][2], sep="")
#m.qud <- read.csv(paste("../../Model/Alternatives/CombinedOutput/", name.qud, sep=""), header=FALSE)
#m.noQud <- read.csv(paste("../../Model/Alternatives/CombinedOutput/",name.noQud, sep=""), header=FALSE)
m.qud <- read.csv(paste("../../Model/CogSciModel/CombinedOutput/", name.qud, sep=""), header=FALSE)
m.noQud <- read.csv(paste("../../Model/CogSciModel/CombinedOutput/", name.noQud, sep=""), header=FALSE)
#m.qud <- read.csv(paste("../../Model/NoAlternatives/CombinedOutput/", name.qud, sep=""), header=FALSE)
#m.noQud <- read.csv(paste("../../Model/NoAlternatives/CombinedOutput/", name.noQud, sep=""), header=FALSE)
#m.qud <- read.csv(paste("../../Model/LiteralAdjectives/CombinedOutputMetaphor/", name.qud, sep=""), header=FALSE)
#m.noQud <- read.csv(paste("../../Model/LiteralAdjectives/CombinedOutputMetaphor/", name.noQud, sep=""), header=FALSE)
#### No goal distinction ####
# colnames(m.qud) <- c("category", "f1", "f2", "f3", "modelProb", "categoryID")
# colnames(m.noQud) <- c("category", "f1", "f2", "f3", "modelProb", "categoryID")
#############################
#### With goal distinction ####
colnames(m.qud) <- c("category", "f1", "f2", "f3", "goal", "modelProb", "categoryID")
colnames(m.noQud) <- c("category", "f1", "f2", "f3", "goal", "modelProb", "categoryID")
############################
m.qud$qud <- "1"
m.noQud$qud <- "0"
m <- rbind(m.qud, m.noQud)
#m$featureSetNum <- factor(m$featureSetNum, labels=c("1,1,1", "1,1,0", "1,0,1", "1,0,0",
#                                                    "0,1,1", "0,1,0", "0,0,1", "0,0,0"))
m <- join(m, mapping, by=c("f1", "f2", "f3"))
model.agg <- aggregate(data=m, modelProb ~ categoryID + featureSetNum + qud, FUN=sum)
compare.set <- join(m.metaphor, model.agg, by=c("categoryID", "featureSetNum", "qud"))
cor <- with(compare.set, cor(normalizedProb, modelProb))
if (cor > max.cor) {
max.cor <- cor
max.name <- name.qud
best <- compare.set
best.model <- m
}
}
}
with(best, cor.test(normalizedProb, modelProb))
m.metaphor <- subset(m.set.long.summary, metaphor==1)
# Get all the names of the model files to fit
#filenames <- read.csv("../../Model/Alternatives/combinedOutputFilenames.txt", header=FALSE)
filenames <- read.csv("../../Model/CogSciModel/combinedOutputFilenames.txt", header=FALSE)
#filenames <- read.csv("../../Model/NoAlternatives/combinedOutputFilenames.txt", header=FALSE)
#filenames <- read.csv("../../Model/LiteralAdjectives/combinedOutputFilenames.txt", header=FALSE)
max.cor <- 0
max.name <- ""
for (n in filenames$V1) {
if (grepl("g", n)) {
name.qud <- n
name.noQud <- paste("noQud-a", as.list(strsplit(n, "a"))[[1]][2], sep="")
#m.qud <- read.csv(paste("../../Model/Alternatives/CombinedOutput/", name.qud, sep=""), header=FALSE)
#m.noQud <- read.csv(paste("../../Model/Alternatives/CombinedOutput/",name.noQud, sep=""), header=FALSE)
m.qud <- read.csv(paste("../../Model/CogSciModel/CombinedOutput/", name.qud, sep=""), header=FALSE)
m.noQud <- read.csv(paste("../../Model/CogSciModel/CombinedOutput/", name.noQud, sep=""), header=FALSE)
#m.qud <- read.csv(paste("../../Model/NoAlternatives/CombinedOutput/", name.qud, sep=""), header=FALSE)
#m.noQud <- read.csv(paste("../../Model/NoAlternatives/CombinedOutput/", name.noQud, sep=""), header=FALSE)
#m.qud <- read.csv(paste("../../Model/LiteralAdjectives/CombinedOutputMetaphor/", name.qud, sep=""), header=FALSE)
#m.noQud <- read.csv(paste("../../Model/LiteralAdjectives/CombinedOutputMetaphor/", name.noQud, sep=""), header=FALSE)
#### No goal distinction ####
colnames(m.qud) <- c("category", "f1", "f2", "f3", "modelProb", "categoryID")
colnames(m.noQud) <- c("category", "f1", "f2", "f3", "modelProb", "categoryID")
#############################
#### With goal distinction ####
#colnames(m.qud) <- c("category", "f1", "f2", "f3", "goal", "modelProb", "categoryID")
#colnames(m.noQud) <- c("category", "f1", "f2", "f3", "goal", "modelProb", "categoryID")
############################
m.qud$qud <- "1"
m.noQud$qud <- "0"
m <- rbind(m.qud, m.noQud)
#m$featureSetNum <- factor(m$featureSetNum, labels=c("1,1,1", "1,1,0", "1,0,1", "1,0,0",
#                                                    "0,1,1", "0,1,0", "0,0,1", "0,0,0"))
m <- join(m, mapping, by=c("f1", "f2", "f3"))
model.agg <- aggregate(data=m, modelProb ~ categoryID + featureSetNum + qud, FUN=sum)
compare.set <- join(m.metaphor, model.agg, by=c("categoryID", "featureSetNum", "qud"))
cor <- with(compare.set, cor(normalizedProb, modelProb))
if (cor > max.cor) {
max.cor <- cor
max.name <- name.qud
best <- compare.set
best.model <- m
}
}
}
with(best, cor.test(normalizedProb, modelProb))
best$qud <- factor(best$qud)
best$featureSetNum <- factor(best$featureSetNum,
labels=c("1,1,1", "1,1,0", "1,0,1", "1,0,0",
"0,1,1", "0,1,0", "0,0,1", "0,0,0"))
head(best)
best.met <- subset(best, metaphor=="1")
head(best.met)
best.met.summary <- summarySE(best, measurevar="modelProb",
groupvars=c("qud", "featureSetNum"))
head(best.met.summary)
nrow(best.met.summary)
ggplot(best.met.summary, aes(x=qud, y=modelProb, fill=featureSetNum)) +
geom_bar(stat="identity", color="black") +
geom_errorbar(aes(ymin=modelProb-se, ymax=modelProb+se)) +
theme_bw()
ggplot(best.met.summary, aes(x=qud, y=modelProb, fill=featureSetNum)) +
geom_bar(stat="identity", color="black", position=position_dodge()) +
geom_errorbar(aes(ymin=modelProb-se, ymax=modelProb+se), position=position_dodge(0.9), width=0.2) +
theme_bw()
ggplot(best.met.summary, aes(x=qud, y=modelProb, fill=featureSetNum)) +
geom_bar(stat="identity", color="black", position=position_dodge()) +
geom_errorbar(aes(ymin=modelProb-se, ymax=modelProb+se), position=position_dodge(0.9), width=0.2) +
theme_bw() +
scale_fill_brewer(palette="RdGy")
setwd("~/Documents/Grad_school/Classes/Psych241/mindsets")
g <- read.csv("goals-other-60Ss.results")
head(g)
g <- read.txt("goals-other-60Ss.results", delim="\t")
g <- read.table("goals-other-60Ss.results", delim="\t")
r = read.table("goals-other-60Ss.results", header=T, sep="\t")
head(r)
r.max <- aggregate(data=r, response ~ subject + dweck_sum_score + version, FUN=max)
head(r.max)
nrw(r.max)
nrow(r.max)
nrow(r)
View(r)
View(r.max)
nrow(r)
nrow(r.max)
r.max <- aggregate(r, response ~ subject + dweck_sum_score + version, FUN=max)
r = read.table("goals-other-60Ss.results", header=T, sep="\t")
r.sorted <- r[with(r, order(subject, response)), ]
head(r.sorted)
r.sorted <- r[with(r, order(subject, -response)), ]
head(r.sorted)
view(r.sorted)
View(r.sorted)
r.sorted <- r[with(r, order(subject, trial_type, -response)), ]
View(r.sorted)
r.sorted$rank <- c(-1, -1, -1, 1, 2, 3, 4, 5, 6, 7)
View(r.sorted)
r.sorted.top <- subset(r.sorted, rank==1)
nrow(r.sorted.top)
median(r.sorted.top$dweck_sum_score)
r.sorted.top$mindset <- ifelse(r.sorted.top$dweck_sum_score > 0.92, "fixed", "growth")
head(r.sorted.top)
nrow(subset(r.sorted.top, mindset=="fixed"))
ggplot(r.sorted.top, aes(x=version, fill=mindset)) +
geom_bar(aes(y = (..count..)/sum(..count..)))
ggplot(r.sorted.top, aes(x=version)) +
geom_bar(aes(y = (..count..)/sum(..count..))) +
theme_bw() +
facet_grid(.~mindset)
ggplot(r.sorted.top, aes(x=version)) +
geom_bar(aes(y = (..count..))) +
theme_bw() +
facet_grid(.~mindset)
quartile(r.sorted.top$dweck_sum_score)
quantile(r.sorted.top$dweck_sum_score)
med <- median(r.sorted.top$dweck_sum_score)
quant <- quantile(r.sorted.top$dweck_sum_score)
quant[0]
quant[0]
quant[1]
quant[1,1]
quant[1]
quant[2]
quant[2][1]
quant[2][1,]
quant[2,]
quant[2
r.sorted.top$mindset <- ifelse(r.sorted.top$dweck_sum_score < quant[2], "very growth", "0")
head(r.sorted.top)
r.sorted.top$mindset <- ifelse(r.sorted.top$dweck_sum_score > med, "fixed", "growth")
quant <- quantile(r.sorted.top$dweck_sum_score)
r.sorted.top$mindsetquart <- ifelse(r.sorted.top$dweck_sum_score < quant[2], 1,
ifelse(r.sorted.top$dweck_sum_score < quant[3], 2,
ifelse(r.sorted.top$dweck_sum_score < quant[4], 3, 4))
)
head(r.sorted.top)
ggplot(r.sorted.top, aes(x=version)) +
geom_bar(aes(y = (..count..))) +
theme_bw() +
facet_grid(.~mindsetquant)
ggplot(r.sorted.top, aes(x=version)) +
geom_bar(aes(y = (..count..))) +
theme_bw() +
facet_grid(.~mindsetquart)
ggplot(r.sorted.top, aes(x=version)) +
geom_bar(aes(y = (..count..))) +
theme_bw() +
facet_grid(.~mindsetquart) +
facet_wrap(ncol=2)
ggplot(r.sorted.top, aes(x=version)) +
geom_bar(aes(y = (..count..))) +
theme_bw() +
facet_grid(.~mindsetquart, ncol=2)
ggplot(r.sorted.top, aes(x=version)) +
geom_bar(aes(y = (..count..))) +
theme_bw() +
facet_wrap(.~mindsetquart, ncol=2)
ggplot(r.sorted.top, aes(x=version)) +
geom_bar(aes(y = (..count..))) +
theme_bw() +
facet_wrap(~mindsetquart, ncol=2)
ggplot(r.sorted.top, aes(x=version)) +
geom_bar(aes(y = (..count..))) +
theme_bw() +
facet_wrap(~mindset, ncol=2)
r.sorted.top <- subset(r.sorted, rank==1 | rank==2)
r.sorted.top$mindset <- ifelse(r.sorted.top$dweck_sum_score > med, "fixed", "growth")
# find quartiles for dweck score
quant <- quantile(r.sorted.top$dweck_sum_score)
r.sorted.top$mindsetquart <- ifelse(r.sorted.top$dweck_sum_score < quant[2], 1,
ifelse(r.sorted.top$dweck_sum_score < quant[3], 2,
ifelse(r.sorted.top$dweck_sum_score < quant[4], 3, 4)))
ggplot(r.sorted.top, aes(x=version)) +
geom_bar(aes(y = (..count..))) +
theme_bw() +
facet_wrap(~mindset, ncol=2)
ggplot(r, aes(x=dweck_sum_score, y=response, color=mindset)) +
geom_point() +
facet_wrap(~version, ncol=3) +
theme_bw()
ggplot(r, aes(x=dweck_sum_score, y=response)) +
geom_point() +
facet_wrap(~version, ncol=3) +
theme_bw()
head(r)
ggplot(subset(r, trial_type=="g)", aes(x=dweck_sum_score, y=response)) +
geom_point() +
facet_wrap(~version, ncol=3) +
theme_bw()
ggplot(subset(r, trial_type=="g"), aes(x=dweck_sum_score, y=response)) +
geom_point() +
facet_wrap(~version, ncol=3) +
theme_bw()
r.goals <- subset(r, trial_type=="g")
ggplot(r.goals, aes(x=dweck_sum_score, y=response)) +
geom_point() +
facet_wrap(~version, ncol=3) +
theme_bw()
r$mindset <- ifelse(r$dweck_sum_score > med, "fixed", "growth")
r.goals <- subset(r, trial_type=="g")
ggplot(r.goals, aes(x=dweck_sum_score, y=response)) +
geom_point() +
facet_wrap(~version, ncol=3) +
theme_bw()
ggplot(r.goals, aes(x=dweck_sum_score, y=response, color=mindset)) +
geom_point() +
facet_wrap(~version, ncol=3) +
theme_bw()
r.sorted.top <- subset(r.sorted, rank==6 | rank==7)
# find median dweck score
med <- median(r.sorted.top$dweck_sum_score)
r.sorted.top$mindset <- ifelse(r.sorted.top$dweck_sum_score > med, "fixed", "growth")
# find quartiles for dweck score
quant <- quantile(r.sorted.top$dweck_sum_score)
r.sorted.top$mindsetquart <- ifelse(r.sorted.top$dweck_sum_score < quant[2], 1,
ifelse(r.sorted.top$dweck_sum_score < quant[3], 2,
ifelse(r.sorted.top$dweck_sum_score < quant[4], 3, 4)))
ggplot(r.sorted.top, aes(x=version)) +
geom_bar(aes(y = (..count..))) +
theme_bw() +
facet_wrap(~mindset, ncol=2)
r.sorted.top <- subset(r.sorted, rank==6)
# find median dweck score
med <- median(r.sorted.top$dweck_sum_score)
r.sorted.top$mindset <- ifelse(r.sorted.top$dweck_sum_score > med, "fixed", "growth")
# find quartiles for dweck score
quant <- quantile(r.sorted.top$dweck_sum_score)
r.sorted.top$mindsetquart <- ifelse(r.sorted.top$dweck_sum_score < quant[2], 1,
ifelse(r.sorted.top$dweck_sum_score < quant[3], 2,
ifelse(r.sorted.top$dweck_sum_score < quant[4], 3, 4)))
ggplot(r.sorted.top, aes(x=version)) +
geom_bar(aes(y = (..count..))) +
theme_bw() +
facet_wrap(~mindset, ncol=2)
r.dweck <- subset(r, trial_type=="d")
ggplot(r.dweck, aes(x=dweck_sum_score, y=response, color=mindset)) +
geom_point() +
facet_wrap(~version, ncol=3) +
theme_bw()
